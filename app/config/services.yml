services:
    # These are the Twig extensions that create new filters and functions for
    # using them in the templates
    app.twig.app_extension:
        public:    false
        class:     Ats\UI\AppBundle\Twig\AppExtension
        arguments: ['%app_locales%']
        tags:
            - { name: twig.extension }

    app.twig.intl_extension:
        public: false
        class:  Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }

    project_repository:
        alias: project_repository.doctrine

    project_repository.doctrine:
        class: Ats\Infrastructure\Persistence\Doctrine\Project\DoctrineProjectRepository
        arguments: ['@doctrine.orm.entity_manager']

    # Uncomment the following lines to define a service for the Post Doctrine repository.
    # It's not mandatory to create these services, but if you use repositories a lot,
    # these services simplify your code:
    #
    # app.post_repository:
    #     class:     Doctrine\ORM\EntityRepository
    #     factory:   ['@doctrine.orm.entity_manager', getRepository]
    #     arguments: [AppBundle\Entity\Post]
    #
    # // traditional code inside a controller
    # $entityManager = $this->getDoctrine()->getManager();
    # $posts = $entityManager->getRepository('AppBundle:Post')->findAll();
    #
    # // same code using repository services
    # $posts = $this->get('app.post_repository')->findAll();

    create_project_command_handler:
        class: Ats\Application\Project\Command\Handler\CreateProjectCommandHandler
        arguments: ['@project_repository']
        tags:
            - { name: command_handler, handles: Ats\Application\Project\Command\CreateProjectCommand }

    edit_project_command_handler:
        class: Ats\Application\Project\Command\Handler\EditProjectCommandHandler
        arguments: ['@project_repository']
        tags:
            - { name: command_handler, handles: Ats\Application\Project\Command\EditProjectCommand }

    remove_project_command_handler:
            class: Ats\Application\Project\Command\Handler\RemoveProjectCommandHandler
            arguments: ['@project_repository']
            tags:
                - { name: command_handler, handles: Ats\Application\Project\Command\RemoveProjectCommand }

    get_all_projects_query_handler:
        class: Ats\Infrastructure\Query\Sql\Project\GetAllProjectsQueryHandler
        arguments: ['@database_connection']
        tags:
            - { name: query_handler, handles: Ats\Application\Project\Query\GetAllProjectsQuery }

    project_of_id_query_handler:
        class: Ats\Infrastructure\Query\Sql\Project\ProjectOfIdQueryHandler
        arguments: ['@database_connection']
        tags:
            - { name: query_handler, handles: Ats\Application\Project\Query\ProjectOfIdQuery }